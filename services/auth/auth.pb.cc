// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth.proto

#include "auth.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace AUTH_RPC {
class CaptchaImageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CaptchaImageRequest> _instance;
} _CaptchaImageRequest_default_instance_;
class CaptchaImageResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CaptchaImageResponse> _instance;
} _CaptchaImageResponse_default_instance_;
class CaptchaImageVerificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CaptchaImageVerification> _instance;
} _CaptchaImageVerification_default_instance_;
class CaptchaEmailRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CaptchaEmailRequest> _instance;
} _CaptchaEmailRequest_default_instance_;
class CaptchaEmailResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CaptchaEmailResponse> _instance;
} _CaptchaEmailResponse_default_instance_;
class CaptchaEmailVerificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CaptchaEmailVerification> _instance;
} _CaptchaEmailVerification_default_instance_;
class StatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Status> _instance;
} _Status_default_instance_;
}  // namespace AUTH_RPC
static void InitDefaultsscc_info_CaptchaEmailRequest_auth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AUTH_RPC::_CaptchaEmailRequest_default_instance_;
    new (ptr) ::AUTH_RPC::CaptchaEmailRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AUTH_RPC::CaptchaEmailRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CaptchaEmailRequest_auth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CaptchaEmailRequest_auth_2eproto}, {}};

static void InitDefaultsscc_info_CaptchaEmailResponse_auth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AUTH_RPC::_CaptchaEmailResponse_default_instance_;
    new (ptr) ::AUTH_RPC::CaptchaEmailResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AUTH_RPC::CaptchaEmailResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CaptchaEmailResponse_auth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CaptchaEmailResponse_auth_2eproto}, {}};

static void InitDefaultsscc_info_CaptchaEmailVerification_auth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AUTH_RPC::_CaptchaEmailVerification_default_instance_;
    new (ptr) ::AUTH_RPC::CaptchaEmailVerification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AUTH_RPC::CaptchaEmailVerification::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CaptchaEmailVerification_auth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CaptchaEmailVerification_auth_2eproto}, {}};

static void InitDefaultsscc_info_CaptchaImageRequest_auth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AUTH_RPC::_CaptchaImageRequest_default_instance_;
    new (ptr) ::AUTH_RPC::CaptchaImageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AUTH_RPC::CaptchaImageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CaptchaImageRequest_auth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CaptchaImageRequest_auth_2eproto}, {}};

static void InitDefaultsscc_info_CaptchaImageResponse_auth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AUTH_RPC::_CaptchaImageResponse_default_instance_;
    new (ptr) ::AUTH_RPC::CaptchaImageResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AUTH_RPC::CaptchaImageResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CaptchaImageResponse_auth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CaptchaImageResponse_auth_2eproto}, {}};

static void InitDefaultsscc_info_CaptchaImageVerification_auth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AUTH_RPC::_CaptchaImageVerification_default_instance_;
    new (ptr) ::AUTH_RPC::CaptchaImageVerification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AUTH_RPC::CaptchaImageVerification::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CaptchaImageVerification_auth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CaptchaImageVerification_auth_2eproto}, {}};

static void InitDefaultsscc_info_Status_auth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AUTH_RPC::_Status_default_instance_;
    new (ptr) ::AUTH_RPC::Status();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AUTH_RPC::Status::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Status_auth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Status_auth_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_auth_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_auth_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_auth_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_auth_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::CaptchaImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::CaptchaImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::CaptchaImageResponse, captcha_image_id_),
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::CaptchaImageResponse, captcha_image_base64_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::CaptchaImageVerification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::CaptchaImageVerification, captcha_image_id_),
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::CaptchaImageVerification, captcha_image_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::CaptchaEmailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::CaptchaEmailRequest, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::CaptchaEmailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::CaptchaEmailResponse, captcha_email_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::CaptchaEmailVerification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::CaptchaEmailVerification, captcha_email_id_),
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::CaptchaEmailVerification, captcha_email_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AUTH_RPC::Status, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::AUTH_RPC::CaptchaImageRequest)},
  { 5, -1, sizeof(::AUTH_RPC::CaptchaImageResponse)},
  { 12, -1, sizeof(::AUTH_RPC::CaptchaImageVerification)},
  { 19, -1, sizeof(::AUTH_RPC::CaptchaEmailRequest)},
  { 25, -1, sizeof(::AUTH_RPC::CaptchaEmailResponse)},
  { 31, -1, sizeof(::AUTH_RPC::CaptchaEmailVerification)},
  { 38, -1, sizeof(::AUTH_RPC::Status)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AUTH_RPC::_CaptchaImageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AUTH_RPC::_CaptchaImageResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AUTH_RPC::_CaptchaImageVerification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AUTH_RPC::_CaptchaEmailRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AUTH_RPC::_CaptchaEmailResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AUTH_RPC::_CaptchaEmailVerification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AUTH_RPC::_Status_default_instance_),
};

const char descriptor_table_protodef_auth_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nauth.proto\022\010AUTH_RPC\"\025\n\023CaptchaImageRe"
  "quest\"N\n\024CaptchaImageResponse\022\030\n\020captcha"
  "_image_id\030\001 \001(\t\022\034\n\024captcha_image_base64\030"
  "\002 \001(\t\"Q\n\030CaptchaImageVerification\022\030\n\020cap"
  "tcha_image_id\030\001 \001(\t\022\033\n\023captcha_image_val"
  "ue\030\002 \001(\t\"$\n\023CaptchaEmailRequest\022\r\n\005email"
  "\030\001 \001(\t\"0\n\024CaptchaEmailResponse\022\030\n\020captch"
  "a_email_id\030\001 \001(\t\"Q\n\030CaptchaEmailVerifica"
  "tion\022\030\n\020captcha_email_id\030\001 \001(\t\022\033\n\023captch"
  "a_email_value\030\002 \001(\t\"\030\n\006Status\022\016\n\006status\030"
  "\001 \001(\0102\311\002\n\013AuthService\022P\n\017GetCaptchaImage"
  "\022\035.AUTH_RPC.CaptchaImageRequest\032\036.AUTH_R"
  "PC.CaptchaImageResponse\022J\n\022VerifyCaptcha"
  "Image\022\".AUTH_RPC.CaptchaImageVerificatio"
  "n\032\020.AUTH_RPC.Status\022P\n\017GetCaptchaEmail\022\035"
  ".AUTH_RPC.CaptchaEmailRequest\032\036.AUTH_RPC"
  ".CaptchaImageResponse\022J\n\022VerifyCaptchaEm"
  "ail\022\".AUTH_RPC.CaptchaEmailVerification\032"
  "\020.AUTH_RPC.Statusb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_auth_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_auth_2eproto_sccs[7] = {
  &scc_info_CaptchaEmailRequest_auth_2eproto.base,
  &scc_info_CaptchaEmailResponse_auth_2eproto.base,
  &scc_info_CaptchaEmailVerification_auth_2eproto.base,
  &scc_info_CaptchaImageRequest_auth_2eproto.base,
  &scc_info_CaptchaImageResponse_auth_2eproto.base,
  &scc_info_CaptchaImageVerification_auth_2eproto.base,
  &scc_info_Status_auth_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_auth_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_auth_2eproto = {
  false, false, descriptor_table_protodef_auth_2eproto, "auth.proto", 745,
  &descriptor_table_auth_2eproto_once, descriptor_table_auth_2eproto_sccs, descriptor_table_auth_2eproto_deps, 7, 0,
  schemas, file_default_instances, TableStruct_auth_2eproto::offsets,
  file_level_metadata_auth_2eproto, 7, file_level_enum_descriptors_auth_2eproto, file_level_service_descriptors_auth_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_auth_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_auth_2eproto)), true);
namespace AUTH_RPC {

// ===================================================================

void CaptchaImageRequest::InitAsDefaultInstance() {
}
class CaptchaImageRequest::_Internal {
 public:
};

CaptchaImageRequest::CaptchaImageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AUTH_RPC.CaptchaImageRequest)
}
CaptchaImageRequest::CaptchaImageRequest(const CaptchaImageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AUTH_RPC.CaptchaImageRequest)
}

void CaptchaImageRequest::SharedCtor() {
}

CaptchaImageRequest::~CaptchaImageRequest() {
  // @@protoc_insertion_point(destructor:AUTH_RPC.CaptchaImageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaptchaImageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CaptchaImageRequest::ArenaDtor(void* object) {
  CaptchaImageRequest* _this = reinterpret_cast< CaptchaImageRequest* >(object);
  (void)_this;
}
void CaptchaImageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaptchaImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CaptchaImageRequest& CaptchaImageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CaptchaImageRequest_auth_2eproto.base);
  return *internal_default_instance();
}


void CaptchaImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AUTH_RPC.CaptchaImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaptchaImageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaptchaImageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AUTH_RPC.CaptchaImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUTH_RPC.CaptchaImageRequest)
  return target;
}

size_t CaptchaImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AUTH_RPC.CaptchaImageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaptchaImageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUTH_RPC.CaptchaImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CaptchaImageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaptchaImageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUTH_RPC.CaptchaImageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUTH_RPC.CaptchaImageRequest)
    MergeFrom(*source);
  }
}

void CaptchaImageRequest::MergeFrom(const CaptchaImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUTH_RPC.CaptchaImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CaptchaImageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUTH_RPC.CaptchaImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaptchaImageRequest::CopyFrom(const CaptchaImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUTH_RPC.CaptchaImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptchaImageRequest::IsInitialized() const {
  return true;
}

void CaptchaImageRequest::InternalSwap(CaptchaImageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CaptchaImageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CaptchaImageResponse::InitAsDefaultInstance() {
}
class CaptchaImageResponse::_Internal {
 public:
};

CaptchaImageResponse::CaptchaImageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AUTH_RPC.CaptchaImageResponse)
}
CaptchaImageResponse::CaptchaImageResponse(const CaptchaImageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  captcha_image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_captcha_image_id().empty()) {
    captcha_image_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_captcha_image_id(),
      GetArena());
  }
  captcha_image_base64_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_captcha_image_base64().empty()) {
    captcha_image_base64_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_captcha_image_base64(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AUTH_RPC.CaptchaImageResponse)
}

void CaptchaImageResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CaptchaImageResponse_auth_2eproto.base);
  captcha_image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  captcha_image_base64_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CaptchaImageResponse::~CaptchaImageResponse() {
  // @@protoc_insertion_point(destructor:AUTH_RPC.CaptchaImageResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaptchaImageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  captcha_image_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  captcha_image_base64_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CaptchaImageResponse::ArenaDtor(void* object) {
  CaptchaImageResponse* _this = reinterpret_cast< CaptchaImageResponse* >(object);
  (void)_this;
}
void CaptchaImageResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaptchaImageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CaptchaImageResponse& CaptchaImageResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CaptchaImageResponse_auth_2eproto.base);
  return *internal_default_instance();
}


void CaptchaImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AUTH_RPC.CaptchaImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  captcha_image_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  captcha_image_base64_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaptchaImageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string captcha_image_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_captcha_image_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AUTH_RPC.CaptchaImageResponse.captcha_image_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string captcha_image_base64 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_captcha_image_base64();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AUTH_RPC.CaptchaImageResponse.captcha_image_base64"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaptchaImageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AUTH_RPC.CaptchaImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string captcha_image_id = 1;
  if (this->captcha_image_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_captcha_image_id().data(), static_cast<int>(this->_internal_captcha_image_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AUTH_RPC.CaptchaImageResponse.captcha_image_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_captcha_image_id(), target);
  }

  // string captcha_image_base64 = 2;
  if (this->captcha_image_base64().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_captcha_image_base64().data(), static_cast<int>(this->_internal_captcha_image_base64().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AUTH_RPC.CaptchaImageResponse.captcha_image_base64");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_captcha_image_base64(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUTH_RPC.CaptchaImageResponse)
  return target;
}

size_t CaptchaImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AUTH_RPC.CaptchaImageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string captcha_image_id = 1;
  if (this->captcha_image_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_captcha_image_id());
  }

  // string captcha_image_base64 = 2;
  if (this->captcha_image_base64().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_captcha_image_base64());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaptchaImageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUTH_RPC.CaptchaImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CaptchaImageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaptchaImageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUTH_RPC.CaptchaImageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUTH_RPC.CaptchaImageResponse)
    MergeFrom(*source);
  }
}

void CaptchaImageResponse::MergeFrom(const CaptchaImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUTH_RPC.CaptchaImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.captcha_image_id().size() > 0) {
    _internal_set_captcha_image_id(from._internal_captcha_image_id());
  }
  if (from.captcha_image_base64().size() > 0) {
    _internal_set_captcha_image_base64(from._internal_captcha_image_base64());
  }
}

void CaptchaImageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUTH_RPC.CaptchaImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaptchaImageResponse::CopyFrom(const CaptchaImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUTH_RPC.CaptchaImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptchaImageResponse::IsInitialized() const {
  return true;
}

void CaptchaImageResponse::InternalSwap(CaptchaImageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  captcha_image_id_.Swap(&other->captcha_image_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  captcha_image_base64_.Swap(&other->captcha_image_base64_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CaptchaImageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CaptchaImageVerification::InitAsDefaultInstance() {
}
class CaptchaImageVerification::_Internal {
 public:
};

CaptchaImageVerification::CaptchaImageVerification(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AUTH_RPC.CaptchaImageVerification)
}
CaptchaImageVerification::CaptchaImageVerification(const CaptchaImageVerification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  captcha_image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_captcha_image_id().empty()) {
    captcha_image_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_captcha_image_id(),
      GetArena());
  }
  captcha_image_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_captcha_image_value().empty()) {
    captcha_image_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_captcha_image_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AUTH_RPC.CaptchaImageVerification)
}

void CaptchaImageVerification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CaptchaImageVerification_auth_2eproto.base);
  captcha_image_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  captcha_image_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CaptchaImageVerification::~CaptchaImageVerification() {
  // @@protoc_insertion_point(destructor:AUTH_RPC.CaptchaImageVerification)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaptchaImageVerification::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  captcha_image_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  captcha_image_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CaptchaImageVerification::ArenaDtor(void* object) {
  CaptchaImageVerification* _this = reinterpret_cast< CaptchaImageVerification* >(object);
  (void)_this;
}
void CaptchaImageVerification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaptchaImageVerification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CaptchaImageVerification& CaptchaImageVerification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CaptchaImageVerification_auth_2eproto.base);
  return *internal_default_instance();
}


void CaptchaImageVerification::Clear() {
// @@protoc_insertion_point(message_clear_start:AUTH_RPC.CaptchaImageVerification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  captcha_image_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  captcha_image_value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaptchaImageVerification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string captcha_image_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_captcha_image_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AUTH_RPC.CaptchaImageVerification.captcha_image_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string captcha_image_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_captcha_image_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AUTH_RPC.CaptchaImageVerification.captcha_image_value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaptchaImageVerification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AUTH_RPC.CaptchaImageVerification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string captcha_image_id = 1;
  if (this->captcha_image_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_captcha_image_id().data(), static_cast<int>(this->_internal_captcha_image_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AUTH_RPC.CaptchaImageVerification.captcha_image_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_captcha_image_id(), target);
  }

  // string captcha_image_value = 2;
  if (this->captcha_image_value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_captcha_image_value().data(), static_cast<int>(this->_internal_captcha_image_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AUTH_RPC.CaptchaImageVerification.captcha_image_value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_captcha_image_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUTH_RPC.CaptchaImageVerification)
  return target;
}

size_t CaptchaImageVerification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AUTH_RPC.CaptchaImageVerification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string captcha_image_id = 1;
  if (this->captcha_image_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_captcha_image_id());
  }

  // string captcha_image_value = 2;
  if (this->captcha_image_value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_captcha_image_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaptchaImageVerification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUTH_RPC.CaptchaImageVerification)
  GOOGLE_DCHECK_NE(&from, this);
  const CaptchaImageVerification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaptchaImageVerification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUTH_RPC.CaptchaImageVerification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUTH_RPC.CaptchaImageVerification)
    MergeFrom(*source);
  }
}

void CaptchaImageVerification::MergeFrom(const CaptchaImageVerification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUTH_RPC.CaptchaImageVerification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.captcha_image_id().size() > 0) {
    _internal_set_captcha_image_id(from._internal_captcha_image_id());
  }
  if (from.captcha_image_value().size() > 0) {
    _internal_set_captcha_image_value(from._internal_captcha_image_value());
  }
}

void CaptchaImageVerification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUTH_RPC.CaptchaImageVerification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaptchaImageVerification::CopyFrom(const CaptchaImageVerification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUTH_RPC.CaptchaImageVerification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptchaImageVerification::IsInitialized() const {
  return true;
}

void CaptchaImageVerification::InternalSwap(CaptchaImageVerification* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  captcha_image_id_.Swap(&other->captcha_image_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  captcha_image_value_.Swap(&other->captcha_image_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CaptchaImageVerification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CaptchaEmailRequest::InitAsDefaultInstance() {
}
class CaptchaEmailRequest::_Internal {
 public:
};

CaptchaEmailRequest::CaptchaEmailRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AUTH_RPC.CaptchaEmailRequest)
}
CaptchaEmailRequest::CaptchaEmailRequest(const CaptchaEmailRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_email(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AUTH_RPC.CaptchaEmailRequest)
}

void CaptchaEmailRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CaptchaEmailRequest_auth_2eproto.base);
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CaptchaEmailRequest::~CaptchaEmailRequest() {
  // @@protoc_insertion_point(destructor:AUTH_RPC.CaptchaEmailRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaptchaEmailRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CaptchaEmailRequest::ArenaDtor(void* object) {
  CaptchaEmailRequest* _this = reinterpret_cast< CaptchaEmailRequest* >(object);
  (void)_this;
}
void CaptchaEmailRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaptchaEmailRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CaptchaEmailRequest& CaptchaEmailRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CaptchaEmailRequest_auth_2eproto.base);
  return *internal_default_instance();
}


void CaptchaEmailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AUTH_RPC.CaptchaEmailRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  email_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaptchaEmailRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string email = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AUTH_RPC.CaptchaEmailRequest.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaptchaEmailRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AUTH_RPC.CaptchaEmailRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AUTH_RPC.CaptchaEmailRequest.email");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUTH_RPC.CaptchaEmailRequest)
  return target;
}

size_t CaptchaEmailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AUTH_RPC.CaptchaEmailRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaptchaEmailRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUTH_RPC.CaptchaEmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CaptchaEmailRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaptchaEmailRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUTH_RPC.CaptchaEmailRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUTH_RPC.CaptchaEmailRequest)
    MergeFrom(*source);
  }
}

void CaptchaEmailRequest::MergeFrom(const CaptchaEmailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUTH_RPC.CaptchaEmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
}

void CaptchaEmailRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUTH_RPC.CaptchaEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaptchaEmailRequest::CopyFrom(const CaptchaEmailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUTH_RPC.CaptchaEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptchaEmailRequest::IsInitialized() const {
  return true;
}

void CaptchaEmailRequest::InternalSwap(CaptchaEmailRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CaptchaEmailRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CaptchaEmailResponse::InitAsDefaultInstance() {
}
class CaptchaEmailResponse::_Internal {
 public:
};

CaptchaEmailResponse::CaptchaEmailResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AUTH_RPC.CaptchaEmailResponse)
}
CaptchaEmailResponse::CaptchaEmailResponse(const CaptchaEmailResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  captcha_email_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_captcha_email_id().empty()) {
    captcha_email_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_captcha_email_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AUTH_RPC.CaptchaEmailResponse)
}

void CaptchaEmailResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CaptchaEmailResponse_auth_2eproto.base);
  captcha_email_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CaptchaEmailResponse::~CaptchaEmailResponse() {
  // @@protoc_insertion_point(destructor:AUTH_RPC.CaptchaEmailResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaptchaEmailResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  captcha_email_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CaptchaEmailResponse::ArenaDtor(void* object) {
  CaptchaEmailResponse* _this = reinterpret_cast< CaptchaEmailResponse* >(object);
  (void)_this;
}
void CaptchaEmailResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaptchaEmailResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CaptchaEmailResponse& CaptchaEmailResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CaptchaEmailResponse_auth_2eproto.base);
  return *internal_default_instance();
}


void CaptchaEmailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AUTH_RPC.CaptchaEmailResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  captcha_email_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaptchaEmailResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string captcha_email_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_captcha_email_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AUTH_RPC.CaptchaEmailResponse.captcha_email_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaptchaEmailResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AUTH_RPC.CaptchaEmailResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string captcha_email_id = 1;
  if (this->captcha_email_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_captcha_email_id().data(), static_cast<int>(this->_internal_captcha_email_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AUTH_RPC.CaptchaEmailResponse.captcha_email_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_captcha_email_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUTH_RPC.CaptchaEmailResponse)
  return target;
}

size_t CaptchaEmailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AUTH_RPC.CaptchaEmailResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string captcha_email_id = 1;
  if (this->captcha_email_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_captcha_email_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaptchaEmailResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUTH_RPC.CaptchaEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CaptchaEmailResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaptchaEmailResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUTH_RPC.CaptchaEmailResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUTH_RPC.CaptchaEmailResponse)
    MergeFrom(*source);
  }
}

void CaptchaEmailResponse::MergeFrom(const CaptchaEmailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUTH_RPC.CaptchaEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.captcha_email_id().size() > 0) {
    _internal_set_captcha_email_id(from._internal_captcha_email_id());
  }
}

void CaptchaEmailResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUTH_RPC.CaptchaEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaptchaEmailResponse::CopyFrom(const CaptchaEmailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUTH_RPC.CaptchaEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptchaEmailResponse::IsInitialized() const {
  return true;
}

void CaptchaEmailResponse::InternalSwap(CaptchaEmailResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  captcha_email_id_.Swap(&other->captcha_email_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CaptchaEmailResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CaptchaEmailVerification::InitAsDefaultInstance() {
}
class CaptchaEmailVerification::_Internal {
 public:
};

CaptchaEmailVerification::CaptchaEmailVerification(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AUTH_RPC.CaptchaEmailVerification)
}
CaptchaEmailVerification::CaptchaEmailVerification(const CaptchaEmailVerification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  captcha_email_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_captcha_email_id().empty()) {
    captcha_email_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_captcha_email_id(),
      GetArena());
  }
  captcha_email_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_captcha_email_value().empty()) {
    captcha_email_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_captcha_email_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:AUTH_RPC.CaptchaEmailVerification)
}

void CaptchaEmailVerification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CaptchaEmailVerification_auth_2eproto.base);
  captcha_email_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  captcha_email_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CaptchaEmailVerification::~CaptchaEmailVerification() {
  // @@protoc_insertion_point(destructor:AUTH_RPC.CaptchaEmailVerification)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaptchaEmailVerification::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  captcha_email_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  captcha_email_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CaptchaEmailVerification::ArenaDtor(void* object) {
  CaptchaEmailVerification* _this = reinterpret_cast< CaptchaEmailVerification* >(object);
  (void)_this;
}
void CaptchaEmailVerification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaptchaEmailVerification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CaptchaEmailVerification& CaptchaEmailVerification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CaptchaEmailVerification_auth_2eproto.base);
  return *internal_default_instance();
}


void CaptchaEmailVerification::Clear() {
// @@protoc_insertion_point(message_clear_start:AUTH_RPC.CaptchaEmailVerification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  captcha_email_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  captcha_email_value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaptchaEmailVerification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string captcha_email_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_captcha_email_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AUTH_RPC.CaptchaEmailVerification.captcha_email_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string captcha_email_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_captcha_email_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "AUTH_RPC.CaptchaEmailVerification.captcha_email_value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaptchaEmailVerification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AUTH_RPC.CaptchaEmailVerification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string captcha_email_id = 1;
  if (this->captcha_email_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_captcha_email_id().data(), static_cast<int>(this->_internal_captcha_email_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AUTH_RPC.CaptchaEmailVerification.captcha_email_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_captcha_email_id(), target);
  }

  // string captcha_email_value = 2;
  if (this->captcha_email_value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_captcha_email_value().data(), static_cast<int>(this->_internal_captcha_email_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "AUTH_RPC.CaptchaEmailVerification.captcha_email_value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_captcha_email_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUTH_RPC.CaptchaEmailVerification)
  return target;
}

size_t CaptchaEmailVerification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AUTH_RPC.CaptchaEmailVerification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string captcha_email_id = 1;
  if (this->captcha_email_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_captcha_email_id());
  }

  // string captcha_email_value = 2;
  if (this->captcha_email_value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_captcha_email_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaptchaEmailVerification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUTH_RPC.CaptchaEmailVerification)
  GOOGLE_DCHECK_NE(&from, this);
  const CaptchaEmailVerification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaptchaEmailVerification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUTH_RPC.CaptchaEmailVerification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUTH_RPC.CaptchaEmailVerification)
    MergeFrom(*source);
  }
}

void CaptchaEmailVerification::MergeFrom(const CaptchaEmailVerification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUTH_RPC.CaptchaEmailVerification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.captcha_email_id().size() > 0) {
    _internal_set_captcha_email_id(from._internal_captcha_email_id());
  }
  if (from.captcha_email_value().size() > 0) {
    _internal_set_captcha_email_value(from._internal_captcha_email_value());
  }
}

void CaptchaEmailVerification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUTH_RPC.CaptchaEmailVerification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaptchaEmailVerification::CopyFrom(const CaptchaEmailVerification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUTH_RPC.CaptchaEmailVerification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptchaEmailVerification::IsInitialized() const {
  return true;
}

void CaptchaEmailVerification::InternalSwap(CaptchaEmailVerification* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  captcha_email_id_.Swap(&other->captcha_email_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  captcha_email_value_.Swap(&other->captcha_email_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CaptchaEmailVerification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Status::InitAsDefaultInstance() {
}
class Status::_Internal {
 public:
};

Status::Status(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AUTH_RPC.Status)
}
Status::Status(const Status& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:AUTH_RPC.Status)
}

void Status::SharedCtor() {
  status_ = false;
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:AUTH_RPC.Status)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Status::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Status::ArenaDtor(void* object) {
  Status* _this = reinterpret_cast< Status* >(object);
  (void)_this;
}
void Status::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Status& Status::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Status_auth_2eproto.base);
  return *internal_default_instance();
}


void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:AUTH_RPC.Status)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Status::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Status::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AUTH_RPC.Status)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUTH_RPC.Status)
  return target;
}

size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AUTH_RPC.Status)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Status::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUTH_RPC.Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Status* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Status>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUTH_RPC.Status)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUTH_RPC.Status)
    MergeFrom(*source);
  }
}

void Status::MergeFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUTH_RPC.Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void Status::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUTH_RPC.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUTH_RPC.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {
  return true;
}

void Status::InternalSwap(Status* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Status::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace AUTH_RPC
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::AUTH_RPC::CaptchaImageRequest* Arena::CreateMaybeMessage< ::AUTH_RPC::CaptchaImageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AUTH_RPC::CaptchaImageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AUTH_RPC::CaptchaImageResponse* Arena::CreateMaybeMessage< ::AUTH_RPC::CaptchaImageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AUTH_RPC::CaptchaImageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AUTH_RPC::CaptchaImageVerification* Arena::CreateMaybeMessage< ::AUTH_RPC::CaptchaImageVerification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AUTH_RPC::CaptchaImageVerification >(arena);
}
template<> PROTOBUF_NOINLINE ::AUTH_RPC::CaptchaEmailRequest* Arena::CreateMaybeMessage< ::AUTH_RPC::CaptchaEmailRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AUTH_RPC::CaptchaEmailRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AUTH_RPC::CaptchaEmailResponse* Arena::CreateMaybeMessage< ::AUTH_RPC::CaptchaEmailResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AUTH_RPC::CaptchaEmailResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::AUTH_RPC::CaptchaEmailVerification* Arena::CreateMaybeMessage< ::AUTH_RPC::CaptchaEmailVerification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AUTH_RPC::CaptchaEmailVerification >(arena);
}
template<> PROTOBUF_NOINLINE ::AUTH_RPC::Status* Arena::CreateMaybeMessage< ::AUTH_RPC::Status >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AUTH_RPC::Status >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
